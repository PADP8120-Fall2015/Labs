for (i in 1:length(WA.split.names))
{
WA.empty.indiv[i,1:length(unlist(WA.split.names[[i]]))] =
gsub(' ','',gsub("[[:punct:]]",'',gsub("[[:digit:]]","",unlist(WA.split.names[[i]]))))
#gsub(':digit:','',gsub(' ','',gsub(')','',gsub("(",'',unlist(WA.split.names[[i]]),fixed=T),fixed=T),fixed=T),perl=T)
}
meetWA.melted = (cbind(meetWA.melted[,names(meetWA.melted)!='value'],WA.empty.indiv))
meetWA.indiv = melt(meetWA.melted,id.vars= names(meetWA.melted)[names(meetWA.melted)%in%as.character(1:max(laply(WA.split.names,length)))==F])
meetWA.indiv = meetWA.indiv %>% select(-variable) %>% filter(!is.na(value)) %>% rename(Individual = value)
library(RCurl)
library(mosaic)
WA.meet.activity = fetchGoogle("https://docs.google.com/spreadsheets/d/1m2Q4jbZ3tCEvcX4AFz4cJA0xYgiLNT21XsA8pDv8nWI/pub?gid=0&single=true&output=csv")
WA.meet.activity$Individual = gsub(' ','',WA.meet.activity$Individual)
meetWA.indiv = join(meetWA.indiv,select(WA.meet.activity[WA.meet.activity$Individual %in% meetWA.indiv$Individual==F,],-Action,-Topic,-Type),type='full')
WA1 = meetWA.indiv %>%  filter(!is.na(Stage)) %>%
arrange(mdy(Date)) %>%
mutate(UQ = Stage)
#mutate(UQ = paste0(Date,Purpose))
dft = data.frame(table(WA1[,c('Individual','UQ')]))
dft = dft[dft$Freq!=0,]
UQs = unique(WA1$UQ)
plist = sort(unique(meetWA.indiv$Individual))
obs.list = list(NULL)
for (i in 1:length(UQs))
{
sub = WA1[WA1$UQ ==  UQs[i],]
dft.sub = data.frame(table(sub[,c('Individual','UQ')]))
dft.sub = dft.sub[dft.sub$Freq!=0,]
empty = matrix(0,nrow=length(plist),ncol=length(plist))
colnames(empty) = plist
rownames(empty) = plist
activity.sub = filter(WA.meet.activity,Stage == UQs[i])
for (j in 1:nrow(WA.meet.activity))
{
temp = meetWA.indiv[as.character(meetWA.indiv$Source) == activity.sub$Source[j],]
attendees = temp$Individual
empty[rownames(empty) %in% activity.sub$Individual[j],colnames(empty) %in% attendees] =
empty[rownames(empty) %in% activity.sub$Individual[j],colnames(empty) %in% attendees] + 1
}
filled = melt(empty)
filled$Action = 0
filled$Action[filled[,1] %in% activity.sub$Individual[activity.sub$Action=='Discuss']] <- 1
filled$Action[filled[,1] %in% activity.sub$Individual[activity.sub$Action=='Present']] <- 2
filled = filter(filled,value>0)
net.temp = network(matrix(0,nrow=length(plist),ncol=length(plist)))
network.vertex.names(net.temp) = plist
network::set.vertex.attribute(net.temp,'Org',as.character(meetWA.indiv$Org[match(network.vertex.names(net.temp),meetWA.indiv$Individual)]))
network::add.edges(net.temp,tail=filled$Var1,head=filled$Var2,names.eval=rep(list(list("edge.weight","edge.action")),nrow(filled)),
vals.eval=lapply(1:nrow(filled),function(r){as.list(filled[r,c('value','Action')])}))
obs.list[[i]] = net.temp
}
obs.list
head(dft.sub)
match(network.vertex.names(net.temp),dft.sub$Individual)
dft.sub1 = data.frame(table(sub[,c('Individual','UQ')]))
match(network.vertex.names(net.temp),dft.sub1$Individual)
?set.vertex.attribut
?set.vertex.attribute
rep(0,network.size(net.temp))
ma[network.vertex.names(net.temp)%in%dft.sub$Individual]
ma = rep(0,network.size(net.temp))
ma[network.vertex.names(net.temp)%in%dft.sub$Individual]
dft.sub$Freq[match(network.vertex.names(net.temp),dft.sub$Individual)]
match(network.vertex.names(net.temp),dft.sub$Individual)
dft.sub$Freq[match(network.vertex.names(net.temp),dft.sub$Individual)]
match(network.vertex.names(net.temp),dft.sub$Individual)
head(dft)
library(plyr)
library(reshape2)
library(dplyr)
library(gdata)
library(shiny)
library(lubridate)
library(RCurl)
require(network)
require(igraph)
require(texreg)
#make sparse matrix
library(Matrix)
library(markdown)
library(networkDynamic)
library(mail)
library(tergm)
remote=FALSE
local=TRUE
ga.comkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/comments_GA.csv?token=ADhv363vAwQ8MgfwkYO687r2x1VzrSKYks5V1gYcwA%3D%3D"
mo.comkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/comments_MO.csv?token=ADhv3xmc4L3_VrcrMWqFkHG632QOiMiQks5V1gYpwA%3D%3D"
wa.comkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/comments_WA.csv?token=ADhv32pB3V7bUt8iQCQrC9aHLJhwikoDks5V1gY4wA%3D%3D"
ga.meetkey = 'https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/meeting_GA.csv?token=ADhv3-8iw-fC5LfOvbhinnNQUNHWzf9zks5V1gW_wA%3D%3D'
mo.meetkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/meeting_MO.csv?token=ADhv38tcpvNz3mpv5P7KP6mc4P64IJKuks5V1gX9wA%3D%3D"
wa.meetkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/meeting_WA.csv?token=ADhv3_7yBFRDWfxZ9uUw1Imm9QkcB1Lfks5V1gYMwA%3D%3D"
if (remote)
{
meetGA = read.csv(text=getURL(ga.meetkey),skip=1)
meetWA = read.csv(text=getURL(wa.meetkey),skip=1)
meetMO = read.csv(text=getURL(mo.meetkey),skip=1)
comGA = read.csv(text=getURL(ga.comkey))
comWA = read.csv(text=getURL(wa.comkey))
comMO = read.csv(text=getURL(mo.comkey))
}
if (!remote&local)
{
meetGA = read.csv('/Users/TScott/Google Drive/bogachiel/Input/meeting_GA.csv',skip=1)
meetWA = read.csv('/Users/TScott/Google Drive/bogachiel/Input/meeting_WA.csv',skip=1)
meetMO = read.csv('/Users/TScott/Google Drive/bogachiel/Input/meeting_MO.csv',skip=1)
comGA = read.csv('/Users/TScott/Google Drive/bogachiel/Input/comments_GA.csv')
comWA = read.csv('/Users/TScott/Google Drive/bogachiel/Input/comments_WA.csv')
comMO = read.csv('/Users/TScott/Google Drive/bogachiel/Input/comments_MO.csv')
}
if (!remote&!local)
{
meetGA = read.csv('/homes/tscott1/win/user/bogachiel/Input/meeting_GA.csv',skip=1)
meetWA = read.csv('/homes/tscott1/win/user/bogachiel/Input/meeting_WA.csv',skip=1)
meetMO = read.csv('/homes/tscott1/win/user/bogachiel/Input/meeting_MO.csv',skip=1)
comGA = read.csv('/homes/tscott1/win/user/bogachiel/Input/comments_GA.csv')
comWA = read.csv('/homes/tscott1/win/user/bogachiel/Input/comments_WA.csv')
comMO = read.csv('/homes/tscott1/win/user/bogachiel/Input/comments_MO.csv')
}
comGA = comGA %>% filter(Stage !='License development')
comWA = comWA %>% filter(Stage !='License development')
comMO = comMO %>% filter(Stage !='License development')
meetWA[!is.na(meetWA)&meetWA==''] = NA
meetWA.melted = melt(meetWA,id.vars=c('Date','Purpose','Location','Stage','Source'))
meetWA.melted = rename(meetWA.melted,Org=variable)
WA.split.names = strsplit(meetWA.melted$value,split=',')
WA.empty.indiv = matrix(NA,ncol=max(laply(WA.split.names,length)),nrow=length(WA.split.names))
for (i in 1:length(WA.split.names))
{
WA.empty.indiv[i,1:length(unlist(WA.split.names[[i]]))] =
gsub(' ','',gsub("[[:punct:]]",'',gsub("[[:digit:]]","",unlist(WA.split.names[[i]]))))
#gsub(':digit:','',gsub(' ','',gsub(')','',gsub("(",'',unlist(WA.split.names[[i]]),fixed=T),fixed=T),fixed=T),perl=T)
}
meetWA.melted = (cbind(meetWA.melted[,names(meetWA.melted)!='value'],WA.empty.indiv))
meetWA.indiv = melt(meetWA.melted,id.vars= names(meetWA.melted)[names(meetWA.melted)%in%as.character(1:max(laply(WA.split.names,length)))==F])
meetWA.indiv = meetWA.indiv %>% select(-variable) %>% filter(!is.na(value)) %>% rename(Individual = value)
library(RCurl)
library(mosaic)
WA.meet.activity = fetchGoogle("https://docs.google.com/spreadsheets/d/1m2Q4jbZ3tCEvcX4AFz4cJA0xYgiLNT21XsA8pDv8nWI/pub?gid=0&single=true&output=csv")
WA.meet.activity$Individual = gsub(' ','',WA.meet.activity$Individual)
meetWA.indiv = join(meetWA.indiv,select(WA.meet.activity[WA.meet.activity$Individual %in% meetWA.indiv$Individual==F,],-Action,-Topic,-Type),type='full')
WA1 = meetWA.indiv %>%  filter(!is.na(Stage)) %>%
arrange(mdy(Date)) %>%
mutate(UQ = Stage)
#mutate(UQ = paste0(Date,Purpose))
dft = data.frame(table(WA1[,c('Individual','UQ')]))
dft.ref = dft
dft = dft[dft$Freq!=0,]
UQs = unique(WA1$UQ)
plist = sort(unique(meetWA.indiv$Individual))
head(dft.ref)
match(network.vertex.names(net.temp),dft.ref$Individual)
dft$UQ
match(network.vertex.names(net.temp),dft.ref$Individual[dft$UQ==UQs[i]])
match(network.vertex.names(net.temp),dft.ref$Individual[dft$UQ==UQs[j]])
dft.ref$Individual[dft$UQ==UQs[j]]
dft$UQ
UQs
j
i
match(network.vertex.names(net.temp),dft.ref$Individual[dft$UQ==UQs[1]])
dft.ref$Individual[dft$UQ==UQs[1]]
network.vertex.names(net.temp) %in% dft.sub$Individual
network.vertex.names(net.temp)[network.vertex.names(net.temp) %in% dft.sub$Individual]
dft.sub$Individual %in% network.vertex.names(net.temp)
dft.sub$Freq[dft.sub$Individual %in% network.vertex.names(net.temp)]
network.vertex.names(net.temp) %in% dft.sub$Individual
1:network.size(net.temp)[network.vertex.names(net.temp) %in% dft.sub$Individual]
1:network.size(net.temp)
obs.list
1:network.size(net.temp)
network.vertex.names(net.temp) %in% dft.sub$Individual
1:network.size(net.temp)[network.vertex.names(net.temp) %in% dft.sub$Individual]
seq(1,network.size(net.temp),1)[network.vertex.names(net.temp) %in% dft.sub$Individual]
library(plyr)
library(reshape2)
library(dplyr)
library(gdata)
library(shiny)
library(lubridate)
library(RCurl)
require(network)
require(igraph)
require(texreg)
#make sparse matrix
library(Matrix)
library(markdown)
library(networkDynamic)
library(mail)
library(tergm)
remote=FALSE
local=TRUE
ga.comkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/comments_GA.csv?token=ADhv363vAwQ8MgfwkYO687r2x1VzrSKYks5V1gYcwA%3D%3D"
mo.comkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/comments_MO.csv?token=ADhv3xmc4L3_VrcrMWqFkHG632QOiMiQks5V1gYpwA%3D%3D"
wa.comkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/comments_WA.csv?token=ADhv32pB3V7bUt8iQCQrC9aHLJhwikoDks5V1gY4wA%3D%3D"
ga.meetkey = 'https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/meeting_GA.csv?token=ADhv3-8iw-fC5LfOvbhinnNQUNHWzf9zks5V1gW_wA%3D%3D'
mo.meetkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/meeting_MO.csv?token=ADhv38tcpvNz3mpv5P7KP6mc4P64IJKuks5V1gX9wA%3D%3D"
wa.meetkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/meeting_WA.csv?token=ADhv3_7yBFRDWfxZ9uUw1Imm9QkcB1Lfks5V1gYMwA%3D%3D"
if (remote)
{
meetGA = read.csv(text=getURL(ga.meetkey),skip=1)
meetWA = read.csv(text=getURL(wa.meetkey),skip=1)
meetMO = read.csv(text=getURL(mo.meetkey),skip=1)
comGA = read.csv(text=getURL(ga.comkey))
comWA = read.csv(text=getURL(wa.comkey))
comMO = read.csv(text=getURL(mo.comkey))
}
if (!remote&local)
{
meetGA = read.csv('/Users/TScott/Google Drive/bogachiel/Input/meeting_GA.csv',skip=1)
meetWA = read.csv('/Users/TScott/Google Drive/bogachiel/Input/meeting_WA.csv',skip=1)
meetMO = read.csv('/Users/TScott/Google Drive/bogachiel/Input/meeting_MO.csv',skip=1)
comGA = read.csv('/Users/TScott/Google Drive/bogachiel/Input/comments_GA.csv')
comWA = read.csv('/Users/TScott/Google Drive/bogachiel/Input/comments_WA.csv')
comMO = read.csv('/Users/TScott/Google Drive/bogachiel/Input/comments_MO.csv')
}
if (!remote&!local)
{
meetGA = read.csv('/homes/tscott1/win/user/bogachiel/Input/meeting_GA.csv',skip=1)
meetWA = read.csv('/homes/tscott1/win/user/bogachiel/Input/meeting_WA.csv',skip=1)
meetMO = read.csv('/homes/tscott1/win/user/bogachiel/Input/meeting_MO.csv',skip=1)
comGA = read.csv('/homes/tscott1/win/user/bogachiel/Input/comments_GA.csv')
comWA = read.csv('/homes/tscott1/win/user/bogachiel/Input/comments_WA.csv')
comMO = read.csv('/homes/tscott1/win/user/bogachiel/Input/comments_MO.csv')
}
comGA = comGA %>% filter(Stage !='License development')
comWA = comWA %>% filter(Stage !='License development')
comMO = comMO %>% filter(Stage !='License development')
meetWA[!is.na(meetWA)&meetWA==''] = NA
meetWA.melted = melt(meetWA,id.vars=c('Date','Purpose','Location','Stage','Source'))
meetWA.melted = rename(meetWA.melted,Org=variable)
WA.split.names = strsplit(meetWA.melted$value,split=',')
WA.empty.indiv = matrix(NA,ncol=max(laply(WA.split.names,length)),nrow=length(WA.split.names))
for (i in 1:length(WA.split.names))
{
WA.empty.indiv[i,1:length(unlist(WA.split.names[[i]]))] =
gsub(' ','',gsub("[[:punct:]]",'',gsub("[[:digit:]]","",unlist(WA.split.names[[i]]))))
#gsub(':digit:','',gsub(' ','',gsub(')','',gsub("(",'',unlist(WA.split.names[[i]]),fixed=T),fixed=T),fixed=T),perl=T)
}
meetWA.melted = (cbind(meetWA.melted[,names(meetWA.melted)!='value'],WA.empty.indiv))
meetWA.indiv = melt(meetWA.melted,id.vars= names(meetWA.melted)[names(meetWA.melted)%in%as.character(1:max(laply(WA.split.names,length)))==F])
meetWA.indiv = meetWA.indiv %>% select(-variable) %>% filter(!is.na(value)) %>% rename(Individual = value)
library(RCurl)
library(mosaic)
WA.meet.activity = fetchGoogle("https://docs.google.com/spreadsheets/d/1m2Q4jbZ3tCEvcX4AFz4cJA0xYgiLNT21XsA8pDv8nWI/pub?gid=0&single=true&output=csv")
WA.meet.activity$Individual = gsub(' ','',WA.meet.activity$Individual)
meetWA.indiv = join(meetWA.indiv,select(WA.meet.activity[WA.meet.activity$Individual %in% meetWA.indiv$Individual==F,],-Action,-Topic,-Type),type='full')
WA1 = meetWA.indiv %>%  filter(!is.na(Stage)) %>%
arrange(mdy(Date)) %>%
mutate(UQ = Stage)
#mutate(UQ = paste0(Date,Purpose))
dft = data.frame(table(WA1[,c('Individual','UQ')]))
dft.ref = dft
dft = dft[dft$Freq!=0,]
UQs = unique(WA1$UQ)
plist = sort(unique(meetWA.indiv$Individual))
obs.list = list(NULL)
for (i in 1:length(UQs))
{
sub = WA1[WA1$UQ ==  UQs[i],]
dft.sub = data.frame(table(sub[,c('Individual','UQ')]))
dft.sub = dft.sub[dft.sub$Freq!=0,]
empty = matrix(0,nrow=length(plist),ncol=length(plist))
colnames(empty) = plist
rownames(empty) = plist
activity.sub = filter(WA.meet.activity,Stage == UQs[i])
for (j in 1:nrow(WA.meet.activity))
{
temp = meetWA.indiv[as.character(meetWA.indiv$Source) == activity.sub$Source[j],]
attendees = temp$Individual
empty[rownames(empty) %in% activity.sub$Individual[j],colnames(empty) %in% attendees] =
empty[rownames(empty) %in% activity.sub$Individual[j],colnames(empty) %in% attendees] + 1
}
filled = melt(empty)
filled$Action = 0
filled$Action[filled[,1] %in% activity.sub$Individual[activity.sub$Action=='Discuss']] <- 1
filled$Action[filled[,1] %in% activity.sub$Individual[activity.sub$Action=='Present']] <- 2
filled = filter(filled,value>0)
net.temp = network(matrix(0,nrow=length(plist),ncol=length(plist)))
network.vertex.names(net.temp) = plist
network::set.vertex.attribute(net.temp,'Org',as.character(meetWA.indiv$Org[match(network.vertex.names(net.temp),meetWA.indiv$Individual)]))
network::add.edges(net.temp,tail=filled$Var1,head=filled$Var2,names.eval=rep(list(list("edge.weight","edge.action")),nrow(filled)),
vals.eval=lapply(1:nrow(filled),function(r){as.list(filled[r,c('value','Action')])}))
network::set.vertex.attribute(net.temp,'meetings.attended',value=0)
network::set.vertex.attribute(net.temp,'meetings.attended',value = dft.sub$Freq,
v = seq(1,network.size(net.temp),1)[network.vertex.names(net.temp) %in% dft.sub$Individual])
obs.list[[i]] = net.temp
}
network::get.vertex.attribute(net.temp,'meetings.attended')
library(plyr)
library(reshape2)
library(dplyr)
library(gdata)
library(shiny)
library(lubridate)
library(RCurl)
require(network)
require(igraph)
require(texreg)
#make sparse matrix
library(Matrix)
library(markdown)
library(networkDynamic)
library(mail)
library(tergm)
remote=FALSE
local=TRUE
ga.comkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/comments_GA.csv?token=ADhv363vAwQ8MgfwkYO687r2x1VzrSKYks5V1gYcwA%3D%3D"
mo.comkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/comments_MO.csv?token=ADhv3xmc4L3_VrcrMWqFkHG632QOiMiQks5V1gYpwA%3D%3D"
wa.comkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/comments_WA.csv?token=ADhv32pB3V7bUt8iQCQrC9aHLJhwikoDks5V1gY4wA%3D%3D"
ga.meetkey = 'https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/meeting_GA.csv?token=ADhv3-8iw-fC5LfOvbhinnNQUNHWzf9zks5V1gW_wA%3D%3D'
mo.meetkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/meeting_MO.csv?token=ADhv38tcpvNz3mpv5P7KP6mc4P64IJKuks5V1gX9wA%3D%3D"
wa.meetkey = "https://raw.githubusercontent.com/tylerascott/bogachiel/master/Input/meeting_WA.csv?token=ADhv3_7yBFRDWfxZ9uUw1Imm9QkcB1Lfks5V1gYMwA%3D%3D"
if (remote)
{
meetGA = read.csv(text=getURL(ga.meetkey),skip=1)
meetWA = read.csv(text=getURL(wa.meetkey),skip=1)
meetMO = read.csv(text=getURL(mo.meetkey),skip=1)
comGA = read.csv(text=getURL(ga.comkey))
comWA = read.csv(text=getURL(wa.comkey))
comMO = read.csv(text=getURL(mo.comkey))
}
if (!remote&local)
{
meetGA = read.csv('/Users/TScott/Google Drive/bogachiel/Input/meeting_GA.csv',skip=1)
meetWA = read.csv('/Users/TScott/Google Drive/bogachiel/Input/meeting_WA.csv',skip=1)
meetMO = read.csv('/Users/TScott/Google Drive/bogachiel/Input/meeting_MO.csv',skip=1)
comGA = read.csv('/Users/TScott/Google Drive/bogachiel/Input/comments_GA.csv')
comWA = read.csv('/Users/TScott/Google Drive/bogachiel/Input/comments_WA.csv')
comMO = read.csv('/Users/TScott/Google Drive/bogachiel/Input/comments_MO.csv')
}
if (!remote&!local)
{
meetGA = read.csv('/homes/tscott1/win/user/bogachiel/Input/meeting_GA.csv',skip=1)
meetWA = read.csv('/homes/tscott1/win/user/bogachiel/Input/meeting_WA.csv',skip=1)
meetMO = read.csv('/homes/tscott1/win/user/bogachiel/Input/meeting_MO.csv',skip=1)
comGA = read.csv('/homes/tscott1/win/user/bogachiel/Input/comments_GA.csv')
comWA = read.csv('/homes/tscott1/win/user/bogachiel/Input/comments_WA.csv')
comMO = read.csv('/homes/tscott1/win/user/bogachiel/Input/comments_MO.csv')
}
comGA = comGA %>% filter(Stage !='License development')
comWA = comWA %>% filter(Stage !='License development')
comMO = comMO %>% filter(Stage !='License development')
meetWA[!is.na(meetWA)&meetWA==''] = NA
meetWA.melted = melt(meetWA,id.vars=c('Date','Purpose','Location','Stage','Source'))
meetWA.melted = rename(meetWA.melted,Org=variable)
WA.split.names = strsplit(meetWA.melted$value,split=',')
WA.empty.indiv = matrix(NA,ncol=max(laply(WA.split.names,length)),nrow=length(WA.split.names))
for (i in 1:length(WA.split.names))
{
WA.empty.indiv[i,1:length(unlist(WA.split.names[[i]]))] =
gsub(' ','',gsub("[[:punct:]]",'',gsub("[[:digit:]]","",unlist(WA.split.names[[i]]))))
#gsub(':digit:','',gsub(' ','',gsub(')','',gsub("(",'',unlist(WA.split.names[[i]]),fixed=T),fixed=T),fixed=T),perl=T)
}
meetWA.melted = (cbind(meetWA.melted[,names(meetWA.melted)!='value'],WA.empty.indiv))
meetWA.indiv = melt(meetWA.melted,id.vars= names(meetWA.melted)[names(meetWA.melted)%in%as.character(1:max(laply(WA.split.names,length)))==F])
meetWA.indiv = meetWA.indiv %>% select(-variable) %>% filter(!is.na(value)) %>% rename(Individual = value)
library(RCurl)
library(mosaic)
WA.meet.activity = fetchGoogle("https://docs.google.com/spreadsheets/d/1m2Q4jbZ3tCEvcX4AFz4cJA0xYgiLNT21XsA8pDv8nWI/pub?gid=0&single=true&output=csv")
WA.meet.activity$Individual = gsub(' ','',WA.meet.activity$Individual)
meetWA.indiv = join(meetWA.indiv,select(WA.meet.activity[WA.meet.activity$Individual %in% meetWA.indiv$Individual==F,],-Action,-Topic,-Type),type='full')
WA1 = meetWA.indiv %>%  filter(!is.na(Stage)) %>%
arrange(mdy(Date)) %>%
mutate(UQ = Stage)
#mutate(UQ = paste0(Date,Purpose))
dft = data.frame(table(WA1[,c('Individual','UQ')]))
dft.ref = dft
dft = dft[dft$Freq!=0,]
UQs = unique(WA1$UQ)
plist = sort(unique(meetWA.indiv$Individual))
obs.list = list(NULL)
for (i in 1:length(UQs))
{
sub = WA1[WA1$UQ ==  UQs[i],]
dft.sub = data.frame(table(sub[,c('Individual','UQ')]))
dft.sub = dft.sub[dft.sub$Freq!=0,]
empty = matrix(0,nrow=length(plist),ncol=length(plist))
colnames(empty) = plist
rownames(empty) = plist
activity.sub = filter(WA.meet.activity,Stage == UQs[i])
for (j in 1:nrow(WA.meet.activity))
{
temp = meetWA.indiv[as.character(meetWA.indiv$Source) == activity.sub$Source[j],]
attendees = temp$Individual
empty[rownames(empty) %in% activity.sub$Individual[j],colnames(empty) %in% attendees] =
empty[rownames(empty) %in% activity.sub$Individual[j],colnames(empty) %in% attendees] + 1
}
filled = melt(empty)
filled$Action = 0
filled$Action[filled[,1] %in% activity.sub$Individual[activity.sub$Action=='Discuss']] <- 1
filled$Action[filled[,1] %in% activity.sub$Individual[activity.sub$Action=='Present']] <- 2
filled = filter(filled,value>0)
net.temp = network(matrix(0,nrow=length(plist),ncol=length(plist)))
network.vertex.names(net.temp) = plist
network::set.vertex.attribute(net.temp,'Org',as.character(meetWA.indiv$Org[match(network.vertex.names(net.temp),meetWA.indiv$Individual)]))
network::add.edges(net.temp,tail=filled$Var1,head=filled$Var2,names.eval=rep(list(list("edge.weight","edge.action")),nrow(filled)),
vals.eval=lapply(1:nrow(filled),function(r){as.list(filled[r,c('value','Action')])}))
network::set.vertex.attribute(net.temp,'meetings.attended',value=0)
network::set.vertex.attribute(net.temp,'meetings.attended',value = dft.sub$Freq,
v = seq(1,network.size(net.temp),1)[network.vertex.names(net.temp) %in% dft.sub$Individual])
obs.list[[i]] = net.temp
}
library(ergm)
search.ergmTerms('valued')
original.list.times.2 = list.of.five.numbers * 2
list.of.five.numbers = c(37,2,4,52,43)
original.list.times.2 = list.of.five.numbers * 2
original.list.times.2
head(arbuthnot)
source("http://www.openintro.org/stat/data/arbuthnot.R")
head(arbuthnot)
arbuthnot[,-'boys']
arbuthnot[,-('boys')]
arbuthnot[,c('year','girls')]
head(arbuthnot[,c('year','girls')])
plot(x = arbuthnot$year, y = arbuthnot$girls, type = "d")
plot(x = arbuthnot$year, y = arbuthnot$girls, type = "l",lty=2)
plot(x = arbuthnot$year, y = arbuthnot$girls, type = "l",lty='d')
plot(x = arbuthnot$year, y = arbuthnot$girls, type = "l",lty=2)
plot(x = arbuthnot$year, y = arbuthnot$girls, type = "l",lty=2,lwd=3)
plot(x = arbuthnot$year, y = arbuthnot$girls, type = "l",lty=2,lwd=4)
plot(x = arbuthnot$year, y = arbuthnot$girls, type = "l",lty=2,lwd=5)
plot(x = arbuthnot$year, y = arbuthnot$girls, type = "l",lty=2,lwd=5,col='green')
hist(x=arbuthnot$girls)
min(arbuthnot$girls)
arbuthnot %>% summarise(min(boys),min(girls))
library(dplyr)
arbuthnot %>% summarise(min(boys),min(girls))
library(dplyr)
arbuthnot %>% summarise(min(boys),min(girls))
min(arbuthnot$boys)
min(arbuthnot$girls)
plot(x=year,y=boys/(boys + girls))
head(arbuthnot)
plot(x=year,y=boys/(boys + girls),data = arbuthnot)
arbuthnot$year
plot(x=year,y=boys/(boys + girls),data = arbuthnot)
plot(x=arbuthnot$year,y=arbuthnot$boys/(arbuthnot$boys + arbuthnot$girls))
plot(x=arbuthnot$year,y=arbuthnot$boys/(arbuthnot$boys + arbuthnot$girls))
abline(h=0.5)
abline(v=0.5)
plot(x=arbuthnot$year,y=arbuthnot$boys/(arbuthnot$boys + arbuthnot$girls),limits=c(0,1))
ggplot(arbuthnot,aes(x=year,y=boys/(boys+girls))) + geom_point()
library(ggplot2)
ggplot(arbuthnot,aes(x=year,y=boys/(boys+girls))) + geom_point()
ggplot(arbuthnot,aes(x=year,y=boys/(boys+girls))) + geom_point() +
scale_y_continuous(limits=c(0,1))
ggplot(arbuthnot,aes(x=year,y=boys/(boys+girls))) + geom_point()
source("http://www.openintro.org/stat/data/cdc.R")
str(cdc)
min(cdc$age)
min(cdc$age)
max(cdc$age)
mean(cdc$age)
summary(cdc$age)
mean(cdc$age)
summary(cdc$height>=72)
table(cdc$heigh>=175)
table(cdc$height>=175)
summary(cdc$height>=175)
table(cdc$weight>=175)
summary(cdc$height>=72)
mean(cdc$weight>=175)
summary(cdc$height)
summary(cdc$age)
IQR(cdc$age)
IQR(cdc$height)
2 + NA
mean(foo)
mean(foo,na.rm=T) # works because it drops NA value before computing mean
foo <- c(1, 2, NA, 3, 4)
mean(foo,na.rm=T) # works because it drops NA value before computing mean
median(foo)
median(foo,na.rm=T)
foo > 2
is.na(foo)
cdc$smoke100
under23.smokers = cdc %>% filter(age<=23,smoke100==1)
library(dplyr)
under23.smokers = subset(cdc,age<=23,smoke100==1)
under23.smokers = subset(cdc,'age'<=23,'smoke100'==1)
under23.smokers = subset(cdc,cdc$age<=23&cdc$smoke100==1)
library(Lahman)
data(Batting)
str(Batting)
mariners <- filter(Batting, teamID=='SEA)
mariners <- filter(Batting, teamID=='SEA')
atl.post2000 <- filter(Batting, teamID=='ATL', yearID>=2000)
table(atl.post2000$yearID)
arrange(Batting, 2B)
arrange(Batting, X2B)
arrange(Batting, X2B)[1:3,]
arrange(Batting, -X2B)[1:3,]
Batting = mutate(Batting, ABpergame = AG/G)
Batting = mutate(Batting, ABpergame = AB/G)
select(Batting, -G, -G_batting)
batting.subset = select(Batting, -G, -G_batting)
head(batting.subset)
names(batting.subset)
summarise(group_by(Batting,teamID),max(SB,na.rm=T),max(X3B,na.rm=T))
summarise(group_by(Batting,teamID),maxSB = max(SB,na.rm=T),max3b = max(X3B,na.rm=T))
Batting %>% filter(AB>=400,yearID>=2000) %>% summarise(min(H))
Batting %>% filter(teamID=='SEA') %>% select(yearID,HR) %>% slice(1:3)
Batting %>% filter(teamID=='SEA') %>% select(yearID,HR) %>% slice(1:2)
library("gapminder")
library(ggplot2)
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp))
p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp))
p + geom_point()
y <- ggplot(gapminder, aes(x = year, y = lifeExp)) + geom_point()
y + facet_wrap(~ continent)
plot(y)
