pbar = sum(us12$response=="atheist")/length(us12$response) #estimate of proportion
SE = sqrt(pbar*(1−pbar)/length(us12$response)) # standard error of estimate
SE = sqrt(pbar*(1-pbar)/length(us12$response)) # standard error of estimate
E = qnorm(.975)*SE #margin of error
E
pbar + c(−E, E)
pbar + c(-E, E)
prop.test(sum(us12$response=="atheist"),length(us12$response))
pbar + c(-E, E)
qchisq(.975)
qchisq(.975,df=length(us12$response))
n <- 1000
p <- seq(0, 1, 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
plot(me ~ p, ylab = "Margin of Error", xlab = "Population Proportion")
p <- 0.1
n <- 1040
p_hats <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats[i] <- sum(samp == "atheist")/n
}
hist(p_hats, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
spain2005 =  atheism %>% filter(nationality=='Spain',year=='2005')
spain2012 =  atheism %>% filter(nationality=='Spain',year=='2012')
spain2005$response
sp05prop = sum(spain2005$response=='atheist')/length(spain2005$response)
sp12prop = sum(spain2012$response=='atheist')/length(spain2012$response)
prop.test(x=c(sp05x,sp12x),n = c(nrow(spain2005),nrow(spain2012)))
sp05x = sum(spain2005$response=='atheist')
sp12x = sum(spain2012$response=='atheist')
prop.test(x=c(sp05x,sp12x),n = c(nrow(spain2005),nrow(spain2012)))
test = read.csv('http://www.stat.duke.edu/~mc301/data/gss_wordsum_class.csv')
download.file("http://www.stat.duke.edu/~mc301/data/gss_wordsum_class.csv",
test = read.csv(text='http://www.stat.duke.edu/~mc301/data/gss_wordsum_class.csv')
test = read.csv(text='http://www.stat.duke.edu/~mc301/data/gss_wordsum_class.csv')
head(test)
test = read.csv(url('http://www.stat.duke.edu/~mc301/data/gss_wordsum_class.csv'))
library(RCurl)
install.packages('RCurl')
library(RCurl)
gssURL <- getURL("http://www.stat.duke.edu/~mc301/data/gss_wordsum_class.csv")
gss <- read.csv(text = gssURL)
head(gss)
gssURL <- getURL("http://www.stat.duke.edu/~mc301/data/gss_wordsum_class.csv")
gss <- read.csv(text = gssURL)
head(gss)
read.table('https://stat.duke.edu/~mc301/data/gss_wordsum_class.csv')
read.table('http://stat.duke.edu/~mc301/data/gss_wordsum_class.csv')
gssURL <- getURL("https://www.stat.duke.edu/~mc301/data/gss_wordsum_class.csv")
gssURL <- getURL("http://www.stat.duke.edu/~mc301/data/gss_wordsum_class.csv")
gss <- read.csv(text = gssURL)
head(gss)
gss = read.csv('input/gss_wordsum_class.csv')
head(gss)
aov(wordsum~class,gss)
summary(aov(wordsum~class,gss))
library(car)
car::Anova(wordsum~class,gss)
car::Anova(lm(wordsum~class,gss))
lm(wordsum~class,gss)
summary.aov((lm(wordsum~class,gss))
summary.aov(lm(wordsum~class,gss))
?pairwise.t.test
?pairwise.t.test
pairwise.t.test(wordsum,class)
pairwise.t.test(wordsum,class,data=gss)
pairwise.t.test(x=wordsum,g = class,data=gss)
pairwise.t.test(x=gss$wordsum,g = gss$class)
pairwise.t.test(x=gss$wordsum,g = gss$class,p.adjust.method = 'bonf')
unique(gss$class)
pairwise.t.test(x=gss$wordsum,g = gss$class,p.adjust.method = 'bonf')
pairwise.t.test(x=gss$wordsum,g = gss$class,p.adjust.method = 'bonf')[[1]]
pairwise.t.test(x=gss$wordsum,g = gss$class,p.adjust.method = 'bonf')[[2]]
pairwise.t.test(x=gss$wordsum,g = gss$class,p.adjust.method = 'bonf')[[3]]
c(pairwise.t.test(x=gss$wordsum,g = gss$class,p.adjust.method = 'bonf')[[3]])
na.rm(c(pairwise.t.test(x=gss$wordsum,g = gss$class,p.adjust.method = 'bonf')[[3]]))
c(pairwise.t.test(x=gss$wordsum,g = gss$class,p.adjust.method = 'bonf')[[3]])
p.adjust(p = c(pairwise.t.test(x=gss$wordsum,g = gss$class,p.adjust.method = 'bonf')[[3]]),
method='bonferroni')
pairwise.t.test(x=gss$wordsum,g = gss$class,p.adjust.method = 'bonf')
tapply(gss$wordsum,gss$class,mean)
temp = read.csv('//Users/TScott/Google Drive/PSI_HWBindicators/Data.Public/Response.By.Row.csv')
head(temp)
temp2 = filter(temp,Question=='Q1Howlong'|Question=='Q7wintrec')
head(temp2)
temp3 = read.csv('//Users/TScott/Google Drive/PSI_HWBindicators/Data.Public/Respondent.Data.csv')
head(temp3)
temp3$Q7
head(temp)
dcast(temp,User.ID ~ Question,'Answer')
library(reshape2)
dcast(temp,User.ID ~ Question,'Answer')
dcast(data=temp,User.ID ~ Question,value.var='Answer')
test = dcast(data=temp,User.ID ~ Question,value.var='Answer')
head(test)
tempall = join(temp3,test)
library(plyr)
library(dplyr)
tempall = join(temp3,test)
head(tempall)
head(test)
temp3$User.ID
dim(test)
dim(temp3)
match(test$User.ID,temp3$User.ID)
match(as.factor(test$User.ID),as.factor(temp3$User.ID))
temp = read.csv('//Users/TScott/Google Drive/PSI_HWBindicators/Data.Public/Response.By.Row.csv')
temp2 = read.csv('//Users/TScott/Google Drive/PSI_HWBindicators/Data.Public/Respondent.Data.csv')
temp = dcast(data=temp,User.ID ~ Question,value.var='Answer')
match(as.factor(temp$User.ID),as.factor(temp2$User.ID))
temp$User.ID
as.character(temp$User.ID)
head(temp)
as.character(temp$User.ID)
duplicated(as.character(temp$User.ID))
match(as.character(temp$User.ID),as.character(temp2$Us))
match(as.character(temp$User.ID),as.character(temp2$User.ID))
as.character(temp$User.ID)
as.character(temp2$User.ID)
temp2$User.ID
as.character(temp2$User.ID)
as.character(as.numeric(temp2$User.ID))
head(temp2)
temp$User.ID %in% temp2$User.ID
class(temp2)
class(temp)
wdata = read.csv('input/wdata.csv')
head(wdata)
load("input/atheism.RData")
install.packages('knitcitations')
library(lattice)
xyplot(len ~ dose, data=ToothGrowth, groups=supp, type=c("a", "g"),
xlab="Dose (mg)", ylab="Tooth length", lwd=2,
auto.key=list(space="top", columns=2, points=FALSE, lines=TRUE))
data(ToothGrowth)
ToothGrowth$dose <- factor(ToothGrowth$dose)
fm <- len ~ supp * dose
replications(fm, data=ToothGrowth)
f <- function(x) c(mean=mean(x), sd=sd(x))
aggregate(fm, ToothGrowth, f)
aov.fit <- aov(fm, data=ToothGrowth)
summary(aov.fit)
model.tables(aov.fit, type="means", se=TRUE, cterms="supp:dose")
library(lattice)
xyplot(len ~ dose, data=ToothGrowth, groups=supp, type=c("a", "g"),
xlab="Dose (mg)", ylab="Tooth length", lwd=2,
auto.key=list(space="top", columns=2, points=FALSE, lines=TRUE))
model.tables(aov.fit, type="means", se=TRUE, cterms="supp:dose")
nyc = read.csv('input/NYC_SchoolVoucher_Experiment.csv')
lm(nyc$y1_math_percentile ~ nyc$Female + nyc$Black)
summary.aov(lm(nyc$y1_math_percentile ~ nyc$Female + nyc$Black))
summary.aov(lm(nyc$y1_math_percentile ~ nyc$Female*nyc$Black))
read.table('https://raw.githubusercontent.com/cogmaster-stats/r-cogstats/master/data/tab13-tabagisme.dat')
suppressPackageStartupMessages(library(dplyr))
load("data/gss_2010_training.RData")
gss.training <- tbl_df(gss.training)
gss <- select(gss.training, income06_n, educ, maeduc, paeduc) %>%
filter(!is.na(income06_n), !is.na(educ), !is.na(maeduc), !is.na(paeduc))
# NOTE: DROPPING MISSING DATA LIKE THIS CAN BE DANGEROUS
gss <- rename(gss, income = income06_n)
suppressPackageStartupMessages(library(dplyr))
load("input/gss_2010_training.RData")
gss.training <- tbl_df(gss.training)
gss <- select(gss.training, income06_n, educ, maeduc, paeduc) %>%
filter(!is.na(income06_n), !is.na(educ), !is.na(maeduc), !is.na(paeduc))
# NOTE: DROPPING MISSING DATA LIKE THIS CAN BE DANGEROUS
gss <- rename(gss, income = income06_n)
gewtd()
getwd()
suppressPackageStartupMessages(library(dplyr))
load("input/gss_2010_training.RData")
gss.training <- tbl_df(gss.training)
gss <- select(gss.training, income06_n, educ, maeduc, paeduc) %>%
filter(!is.na(income06_n), !is.na(educ), !is.na(maeduc), !is.na(paeduc))
# NOTE: DROPPING MISSING DATA LIKE THIS CAN BE DANGEROUS
gss <- rename(gss, income = income06_n)
gss$income06_n
gss <- rename(gss, income = income06_n)
gss <- dplyr::rename(gss, income = income06_n)
p <- ggplot(gss, aes(x=educ, y=income))
p + geom_point() + xlab("Years of education") + ylab("Income category")
suppressPackageStartupMessages(library(ggplot2))
p <- ggplot(gss, aes(x=educ, y=income))
p + geom_point() + xlab("Years of education") + ylab("Income category")
p <- ggplot(gss, aes(x=educ, y=income))
p + geom_point() + xlab("Years of education") + ylab("Income category")
plot(p + geom_point() + xlab("Years of education") + ylab("Income category") )
p + geom_point() + xlab("Years of education") + ylab("Income category")
p + geom_point() + xlab("Years of education") + ylab("Income category")
install.packages("broom")
download.file("http://www.openintro.org/stat/data/mlb11.RData", destfile = "mlb11.RData")
load("input/mlb11.RData")
cor(mlb11$runs, mlb11$at_bats)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
model_hr = lm(runs ~ homeruns, data = mlb11)
model_runs = lm(runs ~ homeruns, data = mlb11)
model_runs$coef
model_atbats$coef[0] + model_atbats$coef[1] * 5578
model_atbats <- lm(runs ~ at_bats, data = mlb11)
model_atbats$coef[0] + model_atbats$coef[1] * 5578
model_atbats$coef[0] + model_atbats$coef[1]
model_atbats$coef[0]
model_atbats$coef
model_atbats$coefficients
model_atbats$coefficients[1]
model_atbats$coefficients[1] + 1
model_atbats$coefficients[1] + model_atbats$coefficients[2]
model_atbats$coefficients[1] + model_atbats$coefficients[2] * 5578
predict(model_atbats,newdata = 5578)
predict(model_atbats,newdata = data.frame('atbats' = 5578))
predict(model_atbats,newdata = data.frame('at_bats' = 5578))
head(mlb11)
names(mlb11)
filter(names(mlb11)!='team')
filter(mlb11,names(mlb11)!='team')
select(mlb11,names(mlb11)!='team')
mlb11 %>% select(-team,-runs)
apply((mlb11 %>% select(-team,-runs)),mean)
apply((mlb11 %>% select(-team,-runs)),2,mean)
apply((mlb11 %>% select(-team,-runs)),lm,mean,y=mlb11$runs)
apply((mlb11 %>% select(-team,-runs)),lm,y=mlb11$runs)
apply((mlb11 %>% select(-team,-runs)),margin=2,FUN=lm,y=mlb11$runs)
apply((mlb11 %>% select(-team,-runs)),MARGIN=2,FUN=lm,y=mlb11$runs)
names(mlb11 %>% select(-team,-runs))
paste0('runs~',names(mlb11 %>% select(-team,-runs)))
lm(paste0('runs~',names(mlb11 %>% select(-team,-runs))))
forms = paste0('runs~',names(mlb11 %>% select(-team,-runs))))
forms
forms = paste0('runs~',names(mlb11 %>% select(-team,-runs))))
forms = paste0('runs~',names(mlb11 %>% select(-team,-runs)))
class(forms)
lapply(forms,lm,data=mlb11)
apply(forms,lm,data=mlb11)
tapply(forms,lm,data=mlb11)
vapply(forms,lm,data=mlb11)
lapply(forms,lm,data=mlb11)
ddply(forms,lm,data=mlb11)
adply(forms,lm,data=mlb11)
alply(forms,lm,data=mlb11)
llply(forms,lm,data=mlb11)
lapply(forms,lm,data=mlb11)
model.results = lapply(forms,lm,data=mlb11)
lapply(model.results,AIC)
unlist(model.results)
coef
lapply(model.results,coef)
ldpply(model.results,coef)
ldply(model.results,coef)
model.results
coef.df = ldply(model.results,coef) #use `ldply` in plyr package ot make coefficient dataframe
names(coef.df) = c('intercept','slope'); coef.df$x.variable = names(mlb11 %>% select(-team,-runs))
head(coef.df)
laply(model.results,AIC)
?laply
laply(model.results,summary)
lapply(model.results,summary)
model.results = lapply(forms,lm,data=mlb11)
lapply(model.results,AIC)
test = lapply(model.results,AIC)[[1]]
test
test = lapply(model.results,summary)[[1]]
test$r.squared
lapply(model.results,summary)$r.squared
lapply(model.results,summary)[['r.squared']]
lapply(model.results,summary)['r.squared']
coef.df$AIC = lapply(model.results,AIC)
str(summary(M.lm))
model.results %>% lapply(summary)
model.results %>% lapply(summary) %>% select(r.squared)
model.results %>% lapply(summary) %>% unlist() %>% select(r.squared)
model_homeruns
model_atbats <- lm(runs ~ at_bats, data = mlb11)
model_atbats
fortify(model_atbats)
fortify.lm(model_atbats)
library(ggplot2)
fortify.lm(model_atbats)
fortify(model_atbats)
nature = read.csv('input/nature08230-s2`)
head(nature)
nature = read.csv('input/nature08230-s2')
nature = read.csv('input/nature08230-s2.csv')
head(nature)
nature %>% select('HDI.1975','HDI.2005','TFR.1975','TFR.2005')
nature %>% select(country,HDI.1975,HDI.2005,TFR.1975,TFR.2005)
model_hdi <- lm(TFR.1975~TFR.2005,data=nature)
summary(model.hdi)
model_hdi <- lm(TFR.1975~TFR.2005,data=nature)
summary(model.hdi)
summary(model_hdi)
library(ggplot2)
library(ggplot2)
hdimod.df = fortify(model_hdi)
head(hdimod.df)
ggplot(hdimod.df) %>% geom_point(.resid,.fitted)
ggplot(hdimod.df) %>% geom_point(aes(.resid,.fitted))
ggplot(hdimod.df) %>% geom_point(aes(y='.resid',x='.fitted'))
names(hdimod.df)
hdimod.df$.resid
ggplot() %>% geom_point(aes(y=hdimod.df$.resid,x=hdimod.df$.fitted))
ggplot(data=hdimod.df) %>% geom_point(aes(y=hdimod.df$.resid,x=hdimod.df$.fitted))
ggplot(data=hdimod.df,aes(x=.resid,y=.fitted))
ggplot(data=hdimod.df,aes(x=.resid,y=.fitted)) %>% geom_point()
?aes_string
ggplot(data=hdimod.df,aes_string(x='.resid',y='.fitted')) %>% geom_point()
class(hdimod.df)
ggplot(hdimod.df)
ggplot(hdimod.df) %>% geom_point()
plot(hdimod.df$.fitted~hdimod.df$.resid)
head(hdimod.df)
ggplot(data=hdimod.df,aes_string(x='.resid',y='.fitted')) %>% geom_point()
ggplot() %>% geom_point(aes(x=model_hdi$coefficients,y=model_hdi$residuals))
ggplot() %>% geom_point(data=hdimod.df,aes(x=model_hdi$coefficients,y=model_hdi$residuals))
ggplot() %>% geom_point(data=hdimod.df,aes(x=coefficients,y=residuals))
ggplot() %>% geom_point(data=hdimod.df,aes(x='coefficients',y='residuals'))
resid.df = fortify(model_hdi)
class(resid.df$TFR.1975)
class(resid.df$.resid)
resid.df$.resid
resid.df$.resid + 2
ggplot() + geom_point(data=hdimod.df,aes(x='coefficients',y='residuals'))
ggplot() + geom_point(data=resid.df,aes(x='.fitted',y='.resid'))
resid.df$.resid
ggplot(data=resid.df) + geom_point(aes(x=.fitted,y=.resid))
ggplot(nature,aes(x=HDI.1975,y=TFR.1975)) %>% geom_point()
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point()
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
geom_point(data = nature,aes(x=HDI.2005,y=TFR.2005),col='red')
lm(HDI.2005~TFR.2005,data=nature)
model_hdi2005 = lm(HDI.2005~TFR.2005,data=nature)
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
geom_point(data = nature,aes(x=HDI.2005,y=TFR.2005),col='red') +
geom_abline(model_hdi2005)
?geom_abline
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
geom_point(data = nature,aes(x=HDI.2005,y=TFR.2005),col='red') +
geom_abline(aes(intercept = model_hdi2005$coef[1],slope=model_hdi2005$coef[2]))
model_hdi2005$coefficients
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
geom_point(data = nature,aes(x=HDI.2005,y=TFR.2005),col='red') +
geom_abline(
aes(intercept = model_hdi2005$coefficients[1],slope=model_hdi2005$coefficients[2]))
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
scale_x_continuous(limits=c(0,1)) +
scale_y_continuous(limits=c(-2,12))
nature$HDI.1975
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
scale_x_continuous(limits=c(0,1)) +
scale_y_continuous(limits=c(-2,12))+
geom_point(data = nature,aes(x=HDI.2005,y=TFR.2005),col='red')
geom_abline(
aes(intercept = model_hdi2005$coefficients[1],slope=model_hdi2005$coefficients[2]))
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
scale_x_continuous(limits=c(0,1)) +
scale_y_continuous(limits=c(-2,12))+
geom_point(data = nature,aes(x=HDI.2005,y=TFR.2005),col='red') +
geom_abline(
aes(intercept = model_hdi2005$coefficients[1],slope=model_hdi2005$coefficients[2]))
model_hdi
model_hdi2005 = lm(HDI.2005~TFR.2005,data=nature)
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
scale_x_continuous(limits=c(0,1)) +
scale_y_continuous(limits=c(-2,12))+
geom_point(data = nature,aes(x=HDI.2005,y=TFR.2005),col='red') +
geom_abline(
aes(intercept = model_hdi2005$coefficients[1],slope=model_hdi2005$coefficients[2]))
model_hdi
model_hdi2005
model_hdi2005 = lm(HDI.2005~TFR.2005,data=nature,na.rm=T)
lm(HDI.2005~TFR.2005,data=nature)
model_hdi1975 <- lm(TFR.1975~HDI.1975,data=nature)
summary(model_hdi1975)
resid1975.df = fortify(model_hdi1975)
ggplot(data=resid1975.df) + geom_point(aes(x=.fitted,y=.resid))
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
geom_point(data = nature,aes(x=HDI.2005,y=TFR.2005),col='red')
model_hdi2005 = lm(HDI.2005~TFR.2005,data=nature)
model_hdi2005
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
scale_x_continuous(limits=c(0,1)) +
scale_y_continuous(limits=c(-2,12))+
geom_point(data = nature,aes(x=HDI.2005,y=TFR.2005),col='red') +
geom_abline(
aes(intercept = model_hdi2005$coefficients[1],slope=model_hdi2005$coefficients[2]))
model_hdi2005 = lm(TFR.2005~HDI2005,data=nature)
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
scale_x_continuous(limits=c(0,1)) +
scale_y_continuous(limits=c(-2,12))+
geom_point(data = nature,aes(x=HDI.2005,y=TFR.2005),col='red') +
geom_abline(
aes(intercept = model_hdi2005$coefficients[1],slope=model_hdi2005$coefficients[2]))
model_hdi2005 = lm(TFR.2005~HDI.2005,data=nature)
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
scale_x_continuous(limits=c(0,1)) +
scale_y_continuous(limits=c(-2,12))+
geom_point(data = nature,aes(x=HDI.2005,y=TFR.2005),col='red') +
geom_abline(
aes(intercept = model_hdi2005$coefficients[1],slope=model_hdi2005$coefficients[2]))
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
geom_abline(aes(slope=model_hdi1975$coef[1],intercept = model_hdi1975$coef[2]))
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
geom_abline(aes(slope=model_hdi1975$coefficients[1],intercept = model_hdi1975$coefficients[2]))
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
geom_abline(aes(slope=model_hdi1975$coefficients[2],intercept = model_hdi1975$coefficients[1]))
ggplot(data = nature,aes(x=HDI.1975,y=TFR.1975)) + geom_point() +
geom_abline(aes(slope=model_hdi1975$coefficients[2],intercept = model_hdi1975$coefficients[1]))+
geom_point(data = nature,aes(x=HDI.2005,y=TFR.2005),col='red') +
geom_abline(
aes(intercept = model_hdi2005$coefficients[1],slope=model_hdi2005$coefficients[2]),col='red')
install.packages("leaps")
source('~/.active-rstudio-document', echo=TRUE)
download.file("http://www.openintro.org/stat/data/evals.RData", destfile = "evals.RData")
load("evals.RData")
load("input/evals.RData")
library(ggplot)
plot(evals$score ~ evals$bty_avg)
plot(evals$score ~ evals$bty_avg)
ggplot(evals,aes(y-score,x=bty_avg))
ggplot(evals,aes(y-score,x=bty_avg)) + geom_point()
ggplot(evals,aes(y=score,x=bty_avg)) + geom_point()
ggplot(evals,aes(y=score,x=bty_avg)) + geom_jitter()
ggplot(evals,aes(y=score,x=bty_avg)) + geom_point()
p + geom_abline(aes(slope=m_bty$coef[2],intercept=m_bty$coef[1]))
m_bty = lm(score~bty_avg,data=evals)
p + geom_abline(aes(slope=m_bty$coef[2],intercept=m_bty$coef[1]))
p = ggplot(evals,aes(y=score,x=bty_avg)) + geom_jitter()
p + geom_abline(aes(slope=m_bty$coef[2],intercept=m_bty$coef[1]))
fortify(m_btyu)
fortify(m_bty)
plot(fortify(m_bty)$.resid ~ fortify(m_bty$.fitted))
plot(fortify(m_bty)$.resid ~ fortify(m_bty)$.fitted)
load("input/gss_2010_training.RData")
suppressPackageStartupMessages(library(dplyr))
load("input/gss_2010_training.RData")
gss.training <- tbl_df(gss.training)
gss <- select(gss.training, income06_n, educ, maeduc, paeduc) %>%
filter(!is.na(income06_n), !is.na(educ), !is.na(maeduc), !is.na(paeduc))
# NOTE: DROPPING MISSING DATA LIKE THIS CAN BE DANGEROUS
gss <- rename(gss, income = income06_n)
gss <- dplyr::rename(gss, income = income06_n)
suppressPackageStartupMessages(library(GGally))
pm <- ggpairs(select(gss, educ, paeduc, income))
pm
install.packages("GGally")
suppressPackageStartupMessages(library(GGally))
pm <- ggpairs(select(gss, educ, paeduc, income))
pm
library(scatterplot3d)
install.packages("scatterplot3d")
library(scatterplot3d)
scatterplot3d(x=gss$educ, y=gss$paeduc, z=gss$income,
xlab="Education", ylab="Father's education",
zlab="Income category", pch=20, angle=20)
scatterplot3d(x=gss$educ, y=gss$paeduc, z=gss$income,
xlab="Education", ylab="Father's education",
zlab="Income category", pch=20, angle=40)
scatterplot3d(x=gss$educ, y=gss$paeduc, z=gss$income,
xlab="Education", ylab="Father's education",
zlab="Income category", pch=20, angle=60)
scatterplot3d(x=gss$educ, y=gss$paeduc, z=gss$income,
xlab="Education", ylab="Father's education",
zlab="Income category", pch=20, angle=80)
s3d <- scatterplot3d(x=gss$educ, y=gss$paeduc, z=gss$income,
xlab="Education", ylab="Father's education",
zlab="Income category", pch=20, angle=20)
my.lm <- lm(gss$income ~ gss$educ + gss$paeduc)
s3d$plane3d(my.lm)
s3d <- scatterplot3d(x=gss$educ, y=gss$paeduc, z=gss$income,
xlab="Education", ylab="Father's education",
zlab="Income category", pch=20, angle=80)
my.lm <- lm(gss$income ~ gss$educ + gss$paeduc)
s3d$plane3d(my.lm)
s3d$plane3d(my.lm,col='blue')
s3d <- scatterplot3d(x=gss$educ, y=gss$paeduc, z=gss$income,
xlab="Education", ylab="Father's education",
zlab="Income category", pch=20, angle=80)
my.lm <- lm(gss$income ~ gss$educ + gss$paeduc)
s3d$plane3d(my.lm,col='red')
s3d <- scatterplot3d(x=gss$educ, y=gss$paeduc, z=gss$income,
xlab="Education", ylab="Father's education",
zlab="Income category", pch=20, angle=80)
my.lm <- lm(gss$income ~ gss$educ + gss$paeduc)
s3d$plane3d(my.lm,col='red',lwd=2)
s3d <- scatterplot3d(x=gss$educ, y=gss$paeduc, z=gss$income,
xlab="Education", ylab="Father's education",
zlab="Income category", pch=20, angle=40)
my.lm <- lm(gss$income ~ gss$educ + gss$paeduc)
s3d$plane3d(my.lm,col='red',lwd=2)
s3d <- scatterplot3d(x=gss$educ, y=gss$paeduc, z=gss$income,
xlab="Education", ylab="Father's education",
zlab="Income category", pch=20, angle=50)
my.lm <- lm(gss$income ~ gss$educ + gss$paeduc)
s3d$plane3d(my.lm,col='red',lwd=2)
library(broom)
fit <- lm(income ~ educ + paeduc, data = gss)
tidy(fit)
newdata = data.frame('paeduc' = 12,'educ'=12)
newdata = data.frame('paeduc' = 12,'educ'=12)
predict(my.lm,newdata)
?predict
predict(my.lm)
predict.lm(my.lm)
predict.lm(my.lm,newdata = new.observation)
new.observation = data.frame('paeduc' = 12,'educ'=12)
predict.lm(my.lm,newdata = new.observation)
new.observation
my.lm
my.lm <- lm(income ~ paeduc + educ, data=gass)
my.lm <- lm(income ~ paeduc + educ, data=gss)
new.observation = data.frame('paeduc' = 12,'educ'=12)
predict.lm(my.lm,newdata = new.observation)
